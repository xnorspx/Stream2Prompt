{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to Stream2Prompt Here's the documents for the subsystems.","title":"Home"},{"location":"#welcome-to-stream2prompt","text":"Here's the documents for the subsystems.","title":"Welcome to Stream2Prompt"},{"location":"Model-Lab/Environment-Setup/","text":"Environment Setup This guide provides instructions for setting up a development environment optimized for model training and evaluation. We recommend using WSL2 with a Linux distribution for better compatibility and performance. Prerequisites Before starting, ensure you have: Windows 11 Pro with WSL2 enabled NVIDIA GPU with compatible drivers Administrative privileges on your system Recommended Environment Windows Host System OS : Windows 11 Pro 25H2 CUDA : 13.0 Update 1 WSL2 Environment OS : Fedora Linux 42 (WSL2) Python : 3.11.13 CUDA : 12.8.1 Setup Instructions (WSL Environment) 1. CUDA Installation Important : Ensure you have installed the latest NVIDIA GPU driver and CUDA version mentioned in the recommended environment (Windows host) before proceeding with the WSL setup. sudo dnf update -y sudo dnf config-manager addrepo --from-repofile https://developer.download.nvidia.com/compute/cuda/repos/fedora41/x86_64/cuda-fedora41.repo sudo dnf clean all sudo dnf -y install cuda-toolkit-12-8 2. Python Environment Setup Install pyenv and Dependencies # Install pyenv curl https://pyenv.run | bash # Add pyenv to bashrc echo 'export PYENV_ROOT=\"$HOME/.pyenv\"' >> ~/.bashrc echo '[[ -d $PYENV_ROOT/bin ]] && export PATH=\"$PYENV_ROOT/bin:$PATH\"' >> ~/.bashrc echo 'eval \"$(pyenv init - bash)\"' >> ~/.bashrc echo 'eval \"$(pyenv virtualenv-init -)\"' >> ~/.bashrc source ~/.bashrc # Install build dependencies sudo dnf install gcc openssl-devel bzip2-devel libffi-devel sqlite-devel readline-devel zlib-devel xz-devel sudo dnf install tcl tk tcl-devel tk-devel Build and Install Tcl/Tk 8.6.14 # Build and install Tcl 8.6.14 cd /tmp wget https://prdownloads.sourceforge.net/tcl/tcl8.6.14-src.tar.gz tar -xzf tcl8.6.14-src.tar.gz cd tcl8.6.14/unix ./configure --prefix=/opt/tcltk8.6 make -j$(nproc) sudo make install # Build and install Tk 8.6.14 cd /tmp wget https://prdownloads.sourceforge.net/tcl/tk8.6.14-src.tar.gz tar -xzf tk8.6.14-src.tar.gz cd tk8.6.14/unix ./configure --prefix=/opt/tcltk8.6 --with-tcl=/opt/tcltk8.6/lib make -j$(nproc) sudo make install Install Python and UV Package Manager # Install Python 3.11.13 with pyenv export CPPFLAGS=\"-I/opt/tcltk8.6/include\" export LDFLAGS=\"-L/opt/tcltk8.6/lib -ltcl8.6 -ltk8.6\" pyenv uninstall 3.11.13 # Clean up any existing installation PYTHON_CONFIGURE_OPTS=\"--with-tcltk-includes='-I/opt/tcltk8.6/include' --with-tcltk-libs='/opt/tcltk8.6/lib'\" pyenv install -v 3.11.13 # Install UV package manager curl -LsSf https://astral.sh/uv/install.sh | sh # Install project dependencies uv sync # This will automatically install all required packages 3. Installation Validation Verify that your installation is working correctly by running the following validation scripts: # Check if PyTorch is installed and can utilize CUDA for computing uv run tools/check_cuda.py # Compare processing time between CPU and GPU to verify GPU acceleration uv run tools/time_cpu.py uv run tools/time_gpu.py The GPU should show significantly faster processing times compared to CPU if everything is configured correctly.","title":"Environment Setup"},{"location":"Model-Lab/Environment-Setup/#environment-setup","text":"This guide provides instructions for setting up a development environment optimized for model training and evaluation. We recommend using WSL2 with a Linux distribution for better compatibility and performance.","title":"Environment Setup"},{"location":"Model-Lab/Environment-Setup/#prerequisites","text":"Before starting, ensure you have: Windows 11 Pro with WSL2 enabled NVIDIA GPU with compatible drivers Administrative privileges on your system","title":"Prerequisites"},{"location":"Model-Lab/Environment-Setup/#recommended-environment","text":"","title":"Recommended Environment"},{"location":"Model-Lab/Environment-Setup/#windows-host-system","text":"OS : Windows 11 Pro 25H2 CUDA : 13.0 Update 1","title":"Windows Host System"},{"location":"Model-Lab/Environment-Setup/#wsl2-environment","text":"OS : Fedora Linux 42 (WSL2) Python : 3.11.13 CUDA : 12.8.1","title":"WSL2 Environment"},{"location":"Model-Lab/Environment-Setup/#setup-instructions-wsl-environment","text":"","title":"Setup Instructions (WSL Environment)"},{"location":"Model-Lab/Environment-Setup/#1-cuda-installation","text":"Important : Ensure you have installed the latest NVIDIA GPU driver and CUDA version mentioned in the recommended environment (Windows host) before proceeding with the WSL setup. sudo dnf update -y sudo dnf config-manager addrepo --from-repofile https://developer.download.nvidia.com/compute/cuda/repos/fedora41/x86_64/cuda-fedora41.repo sudo dnf clean all sudo dnf -y install cuda-toolkit-12-8","title":"1. CUDA Installation"},{"location":"Model-Lab/Environment-Setup/#2-python-environment-setup","text":"","title":"2. Python Environment Setup"},{"location":"Model-Lab/Environment-Setup/#install-pyenv-and-dependencies","text":"# Install pyenv curl https://pyenv.run | bash # Add pyenv to bashrc echo 'export PYENV_ROOT=\"$HOME/.pyenv\"' >> ~/.bashrc echo '[[ -d $PYENV_ROOT/bin ]] && export PATH=\"$PYENV_ROOT/bin:$PATH\"' >> ~/.bashrc echo 'eval \"$(pyenv init - bash)\"' >> ~/.bashrc echo 'eval \"$(pyenv virtualenv-init -)\"' >> ~/.bashrc source ~/.bashrc # Install build dependencies sudo dnf install gcc openssl-devel bzip2-devel libffi-devel sqlite-devel readline-devel zlib-devel xz-devel sudo dnf install tcl tk tcl-devel tk-devel","title":"Install pyenv and Dependencies"},{"location":"Model-Lab/Environment-Setup/#build-and-install-tcltk-8614","text":"# Build and install Tcl 8.6.14 cd /tmp wget https://prdownloads.sourceforge.net/tcl/tcl8.6.14-src.tar.gz tar -xzf tcl8.6.14-src.tar.gz cd tcl8.6.14/unix ./configure --prefix=/opt/tcltk8.6 make -j$(nproc) sudo make install # Build and install Tk 8.6.14 cd /tmp wget https://prdownloads.sourceforge.net/tcl/tk8.6.14-src.tar.gz tar -xzf tk8.6.14-src.tar.gz cd tk8.6.14/unix ./configure --prefix=/opt/tcltk8.6 --with-tcl=/opt/tcltk8.6/lib make -j$(nproc) sudo make install","title":"Build and Install Tcl/Tk 8.6.14"},{"location":"Model-Lab/Environment-Setup/#install-python-and-uv-package-manager","text":"# Install Python 3.11.13 with pyenv export CPPFLAGS=\"-I/opt/tcltk8.6/include\" export LDFLAGS=\"-L/opt/tcltk8.6/lib -ltcl8.6 -ltk8.6\" pyenv uninstall 3.11.13 # Clean up any existing installation PYTHON_CONFIGURE_OPTS=\"--with-tcltk-includes='-I/opt/tcltk8.6/include' --with-tcltk-libs='/opt/tcltk8.6/lib'\" pyenv install -v 3.11.13 # Install UV package manager curl -LsSf https://astral.sh/uv/install.sh | sh # Install project dependencies uv sync # This will automatically install all required packages","title":"Install Python and UV Package Manager"},{"location":"Model-Lab/Environment-Setup/#3-installation-validation","text":"Verify that your installation is working correctly by running the following validation scripts: # Check if PyTorch is installed and can utilize CUDA for computing uv run tools/check_cuda.py # Compare processing time between CPU and GPU to verify GPU acceleration uv run tools/time_cpu.py uv run tools/time_gpu.py The GPU should show significantly faster processing times compared to CPU if everything is configured correctly.","title":"3. Installation Validation"},{"location":"Model-Lab/Usage/","text":"Usage This guide provides instructions for using the components of the Model Lab, including data labeling, model training, and evaluation. Data Labeling To prepare a new dataset for training, start Label Studio with the following command: uv run label-studio start This will launch the Label Studio web interface for data annotation and labeling. Model Training Configure the training parameters in model-lab/model-training.py Start the training process: uv run model-lab/model-training.py Ultralytics Settings Reference The following settings.json configuration is used for Ultralytics: { \"settings_version\": \"0.0.6\", \"datasets_dir\": \"/home/xnorspx/Projects/Stream2Prompt/model-lab/ds\", \"weights_dir\": \"/home/xnorspx/Projects/Stream2Prompt/model-lab/weights\", \"runs_dir\": \"/home/xnorspx/Projects/Stream2Prompt/model-lab/runs\", \"uuid\": \"5bcc1cf32ada676916ec735cd4e216c62ff1e97244777357720c2ca28a7b7314\", \"sync\": true, \"api_key\": \"\", \"openai_api_key\": \"\", \"clearml\": true, \"comet\": true, \"dvc\": true, \"hub\": true, \"mlflow\": true, \"neptune\": true, \"raytune\": true, \"tensorboard\": false, \"wandb\": false, \"vscode_msg\": true, \"openvino_msg\": false } Model Evaluation To test and evaluate your trained models, run the evaluation script and select the model you want to test: uv run model-lab/model-eval.py The script will prompt you to choose from available trained models for evaluation.","title":"Usage"},{"location":"Model-Lab/Usage/#usage","text":"This guide provides instructions for using the components of the Model Lab, including data labeling, model training, and evaluation.","title":"Usage"},{"location":"Model-Lab/Usage/#data-labeling","text":"To prepare a new dataset for training, start Label Studio with the following command: uv run label-studio start This will launch the Label Studio web interface for data annotation and labeling.","title":"Data Labeling"},{"location":"Model-Lab/Usage/#model-training","text":"Configure the training parameters in model-lab/model-training.py Start the training process: uv run model-lab/model-training.py","title":"Model Training"},{"location":"Model-Lab/Usage/#ultralytics-settings-reference","text":"The following settings.json configuration is used for Ultralytics: { \"settings_version\": \"0.0.6\", \"datasets_dir\": \"/home/xnorspx/Projects/Stream2Prompt/model-lab/ds\", \"weights_dir\": \"/home/xnorspx/Projects/Stream2Prompt/model-lab/weights\", \"runs_dir\": \"/home/xnorspx/Projects/Stream2Prompt/model-lab/runs\", \"uuid\": \"5bcc1cf32ada676916ec735cd4e216c62ff1e97244777357720c2ca28a7b7314\", \"sync\": true, \"api_key\": \"\", \"openai_api_key\": \"\", \"clearml\": true, \"comet\": true, \"dvc\": true, \"hub\": true, \"mlflow\": true, \"neptune\": true, \"raytune\": true, \"tensorboard\": false, \"wandb\": false, \"vscode_msg\": true, \"openvino_msg\": false }","title":"Ultralytics Settings Reference"},{"location":"Model-Lab/Usage/#model-evaluation","text":"To test and evaluate your trained models, run the evaluation script and select the model you want to test: uv run model-lab/model-eval.py The script will prompt you to choose from available trained models for evaluation.","title":"Model Evaluation"}]}